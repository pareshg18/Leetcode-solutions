Given a string, find the length of the longest substring without repeating characters.

Example 1:

Input: "abcabcbb"
Output: 3 
Explanation: The answer is "abc", with the length of 3. 
Example 2:

Input: "bbbbb"
Output: 1
Explanation: The answer is "b", with the length of 1.
Example 3:

Input: "pwwkew"
Output: 3
Explanation: The answer is "wke", with the length of 3. 
             Note that the answer must be a substring, "pwke" is a subsequence and not a substring.
             
             
 -------------------Solution------------------------
 
 class Solution:
    def lengthOfLongestSubstring(self, s: str) -> int:
        
        if len(s) == 0:
            return 0
        if len(set(s)) == 1:
            return 1
        
        out = ''
        lst = []
        for i in s:
            if i not in out:
                out += i
            else:
                lst.append(out)
                ind = out.index(i)
                out = out[ind+1:] + i
                
        lst.append(out)
        
        return max([len(i) for i in lst])
