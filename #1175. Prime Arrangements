Return the number of permutations of 1 to n so that prime numbers are at prime indices (1-indexed.)

(Recall that an integer is prime if and only if it is greater than 1, and cannot be written as a product of two positive integers both smaller than it.)

Since the answer may be large, return the answer modulo 10^9 + 7.

 

Example 1:

Input: n = 5
Output: 12
Explanation: For example [1,2,5,4,3] is a valid permutation, but [5,2,3,4,1] is not because the prime number 5 is at index 1.
Example 2:

Input: n = 100
Output: 682289015
 

Constraints:

1 <= n <= 100




-----------------Solutions---------------


class Solution:
    def numPrimeArrangements(self, n: int) -> int:
        lst = [i for i in range(2,n+1)]
        primes = []
        while len(lst)>0:
            val = lst.pop(0)
            primes.append(val)
            lst = [i for i in lst if i%val !=0]
        
        length = len(primes)
        length2 = n - length
        
        import math 
        return(math.factorial(length)*math.factorial(length2))%(10**9+7)
