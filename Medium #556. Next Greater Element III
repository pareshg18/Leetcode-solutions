Given a positive 32-bit integer n, you need to find the smallest 32-bit integer which has exactly the same digits existing in the integer n and is greater in value than n. If no such positive 32-bit integer exists, you need to return -1.

Example 1:

Input: 12
Output: 21
 

Example 2:

Input: 21
Output: -1

------------------Solution-------------------------

class Solution:
    def nextGreaterElement(self, n: int) -> int:
        
        from itertools import permutations
        num = list(str(n))
        
        if num == sorted(num,reverse = True):
            return -1
        else:
            lst = permutations(num,len(num))
            lst = [int(''.join(i)) for i in lst]
            lst = [i for i in lst if i > n]
            val = min(lst)
            if val <= 2147483647:
                return val
            else:
                return -1
            
        
