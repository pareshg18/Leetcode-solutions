Given a list of intervals, remove all intervals that are covered by another interval in the list. Interval [a,b) is covered by interval [c,d) if and only if c <= a and b <= d.

After doing so, return the number of remaining intervals.

 

Example 1:

Input: intervals = [[1,4],[3,6],[2,8]]
Output: 2
Explanation: Interval [3,6] is covered by [2,8], therefore it is removed.


----------------------Solution--------------------------

class Solution:
    def removeCoveredIntervals(self, intervals: List[List[int]]) -> int:
        
        int_sort = sorted(intervals,key = lambda x:x[0])
        
        for i in int_sort:
            left = i[0]
            right = i[1]
            lst = [j for j in intervals if j[0] >= left and j[1] <= right and j!=i]
            [intervals.remove(k) for k in lst if k in intervals]
                   
        return len(intervals)
