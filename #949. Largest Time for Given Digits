class Solution(object):
    def largestTimeFromDigits(self, A):
        """
        :type A: List[int]
        :rtype: str
        """
        import collections
        s = ''.join([str(i) for i in A])
        counts = collections.Counter(s)
        
        lst = []
        for i in range(len(A)):
            for j in range(i+1,len(A)):
                time = str(A[i])+str(A[j])
                lst.append(time)
                
        combo2 = [i[::-1] for i in lst]
        
        possi = lst+combo2
        
        hr = [i for i in set(possi) if int(i)<24]
        mt = [i for i in set(possi) if int(i)<60]
        
        valid_time = []
        for i in hr:
            for j in mt:
                valid_time.append(i+j)
                
        times = [i for i in valid_time if collections.Counter(i) == counts]
        
        if len(times)==0:
            return("")
        ans = max(times)
        
        return(ans[:2]+':'+ans[2:])
